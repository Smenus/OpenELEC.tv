--- a/src/atvclient.cpp
+++ b/src/atvclient.cpp
@@ -25,8 +25,16 @@
 #include "xbmcclient.h"
 
 #define VENDOR_APPLE		0x05ac
-#define PRODUCT_IR		0x8241
+#define PRODUCT_APPLE_IR_0    0x8240
+#define PRODUCT_APPLE_IR_1    0x8241
+#define PRODUCT_APPLE_IR_2    0x8242
 
+#define IS_APPLE_REMOTE(dev) ((dev->descriptor.idVendor == VENDOR_APPLE) && \
+                             ((dev->descriptor.idProduct == PRODUCT_APPLE_IR_0) || \
+                              (dev->descriptor.idProduct == PRODUCT_APPLE_IR_1) || \
+                              (dev->descriptor.idProduct == PRODUCT_APPLE_IR_2)))
+
+#define IS_PRODUCT_IR_0(dev) (dev->descriptor.idProduct == PRODUCT_APPLE_IR_0)
 #define LEDMODE_OFF		0
 #define LEDMODE_AMBER		1
 #define LEDMODE_AMBER_BLINK	2
@@ -127,6 +135,7 @@
 int button_mode = LEDMODE_OFF;
 int special_mode = LEDMODE_AMBER;
 int hold_mode = LEDMODE_AMBER;
+int endpoint = 0x82;
 
 /* from libusb usbi.h */
 struct usb_dev_handle {
@@ -264,9 +273,12 @@ static usb_dev_handle *find_ir(void)
 
 	for (bus = usb_busses; bus; bus = bus->next) {
 		for (dev = bus->devices; dev; dev = dev->next)
-			if (dev->descriptor.idVendor == VENDOR_APPLE
-			    && dev->descriptor.idProduct == PRODUCT_IR)
-				return usb_open(dev);
+			if (dev->descriptor.idVendor == VENDOR_APPLE)
+				if (IS_APPLE_REMOTE(dev)) {
+					if (IS_PRODUCT_IR_0(dev))
+						endpoint = 0x83;
+ 					return usb_open(dev);
+				}
 	}
 
 	return NULL;
@@ -857,7 +869,7 @@ int main(int argc, char **argv) {
   set_led(idle_mode);
     
   while(1){
-    int result = usb_interrupt_read(get_ir(), 0x82, (char*) &command, sizeof(command), keydown ? BUTTON_TIMEOUT : 0);  
+    int result = usb_interrupt_read(get_ir(), endpoint, (char*) &command, sizeof(command), keydown ? BUTTON_TIMEOUT : 0);  
     if(result > 0) {
       // we have an IR code!
       unsigned long start = millis();

